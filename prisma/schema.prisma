// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum HabitFrequency {
  DAILY
  WEEKLY
}

enum TargetType {
  COUNT
  MINUTES
  BOOLEAN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  displayName String?
  habits    Habit[]
  dailyProgress DailyProgress[]
  habitChecks HabitCheck[]
  health    Health[]
  createdAt DateTime @default(now())
}

model Habit {
  id              String         @id @default(cuid())
  userId          String
  user            User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  name            String
  frequency       HabitFrequency
  targetType      TargetType
  targetValue     Int
  active          Boolean        @default(true)
  currentProgress Int            @default(0)
  isCompleted     Boolean        @default(false)
  lastUpdated     DateTime       @default(now())
  totalProgress   Int            @default(0)
  lastResetDate   DateTime       @default(now())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  habitChecks     HabitCheck[]

  @@unique([userId, name])
  @@index([userId])
  @@index([active])
  @@index([lastResetDate])
}

model DailyProgress {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  date       DateTime @db.Date
  habitsData Json
  createdAt  DateTime @default(now())

  @@unique([userId, date])
  @@index([userId])
  @@index([date])
}

model HabitCheck {
  id        String   @id @default(cuid())
  habitId   String
  habit     Habit   @relation(fields: [habitId], references: [id], onDelete: Cascade)
  userId    String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  date      String  // ISO date string
  completed Boolean
  timestamp String  // ISO timestamp string
  createdAt DateTime @default(now())

  @@index([habitId])
  @@index([userId])
  @@index([date])
  @@index([completed])
}

model Health {
  id              String   @id @default(cuid())
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  date            DateTime @db.Date
  
  // Basic Metrics
  weight          Float?
  height          Float?
  bmi             Float?
  
  // Apple Health Specific Metrics
  steps           Int?
  distance        Int?
  caloriesBurned  Int?
  activeEnergy    Int?
  restingEnergy   Int?
  
  // Vital Signs
  bloodPressure   String?
  heartRate       Int?
  bloodOxygen     Float?
  bodyTemperature Float?
  
  // Sleep Data
  sleepHours      Float?
  sleepQuality    String?
  
  // Activity Data
  exerciseMinutes Int?
  standHours      Int?
  
  // Other Metrics
  waterIntake     Int?
  notes           String?
  source          String  @default("apple_health")
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([userId, date])
  @@index([userId])
  @@index([date])
  @@index([source])
}
